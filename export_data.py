import sqlite3
import json
from typing import List, Dict, Any

def export_questions_with_top_answers(db_path: str = 'askreddit.db', output_path: str = 'data.js') -> None:
    """
    Export questions with their top 10 answers to JavaScript format
    """
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    print("Fetching all questions with their top 10 answers in one query...")
    
    # Use a single query with window function to get top 10 answers per question
    cursor.execute("""
        SELECT 
            q.id,
            q.text as question_text,
            q.votes as question_votes,
            q.timestamp,
            q.datetime,
            a.text as answer_text,
            a.votes as answer_votes
        FROM questions q
        LEFT JOIN (
            SELECT 
                q_id,
                text,
                votes,
                ROW_NUMBER() OVER (PARTITION BY q_id ORDER BY votes DESC) as rn
            FROM answers
        ) a ON q.id = a.q_id AND a.rn <= 10
        ORDER BY q.votes DESC, q.id, a.votes DESC
    """)
    
    rows = cursor.fetchall()
    conn.close()
    
    print(f"Processing {len(rows)} rows...")
    
    # Group results by question
    questions_dict = {}
    
    for row in rows:
        q_id, q_text, q_votes, q_timestamp, q_datetime, answer_text, answer_votes = row
        
        if q_id not in questions_dict:
            questions_dict[q_id] = {
                'id': q_id,
                'text': q_text,
                'votes': q_votes,
                'timestamp': q_timestamp,
                'datetime': q_datetime,
                'top_answers': []
            }
        
        # Add answer if it exists (LEFT JOIN might return NULL answers)
        if answer_text is not None:
            questions_dict[q_id]['top_answers'].append({
                'text': answer_text,
                'votes': answer_votes
            })
    
    # Convert to list and maintain order by question votes
    result = list(questions_dict.values())
    
    # Export to JavaScript file
    with open(output_path, 'w', encoding='utf-8') as f:
        f.write('// Reddit AskReddit questions and answers data\n')
        f.write('// Generated by export_data.py\n\n')
        f.write('const redditData = ')
        json.dump(result, f, indent=2, ensure_ascii=False)
        f.write(';\n')
    
    print(f"Exported {len(result)} questions with their top answers to {output_path}")
    print(f"Total answers exported: {sum(len(q['top_answers']) for q in result)}")

if __name__ == "__main__":
    export_questions_with_top_answers()
